// SPDX-License-Identifier: Apache-2.0

// Code generated for package pgmigrations by go-bindata DO NOT EDIT. (@generated)
// sources:
// migrations/postgres/1_create_pgstream_xid.down.sql
// migrations/postgres/1_create_pgstream_xid.up.sql
// migrations/postgres/2_create_pgstream_schemalog_table.down.sql
// migrations/postgres/2_create_pgstream_schemalog_table.up.sql
// migrations/postgres/3_create_pgstream_tableids_table.down.sql
// migrations/postgres/3_create_pgstream_tableids_table.up.sql
// migrations/postgres/4_create_pgstream_get_schema_function.down.sql
// migrations/postgres/4_create_pgstream_get_schema_function.up.sql
// migrations/postgres/5_create_pgstream_log_schema_function.down.sql
// migrations/postgres/5_create_pgstream_log_schema_function.up.sql
// migrations/postgres/6_create_pgstream_refresh_schema_function.down.sql
// migrations/postgres/6_create_pgstream_refresh_schema_function.up.sql
// migrations/postgres/7_create_pgstream_event_triggers.down.sql
// migrations/postgres/7_create_pgstream_event_triggers.up.sql
package pgmigrations

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// Mode return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var __1_create_pgstream_xidDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x70\x0b\xf5\x73\x0e\xf1\xf4\xf7\x53\xf0\x74\x53\x70\x8d\xf0\x0c\x0e\x09\x56\x28\x48\x2f\x2e\x29\x4a\x4d\xcc\xd5\xab\xc8\x4c\x89\x4f\xce\x2f\xcd\x2b\x49\x2d\xb2\xe6\x22\x4a\x75\x41\x66\x0a\x91\x2a\x73\x13\x93\x33\x32\xf3\x52\x89\x54\x5d\x92\x99\x4b\xa4\x52\x22\x0d\x4c\x49\x4d\xce\x4f\x21\xd6\xf6\xd4\x3c\x22\x15\xc7\x23\xf9\x2c\x1e\xee\x96\x60\xd7\xc0\x50\x57\x3f\x67\x57\x5c\xc6\x17\xa7\x16\x65\x26\xe6\x28\x40\x55\xbb\xf8\xfb\x3a\x7a\xe2\xf6\x1d\x20\x00\x00\xff\xff\x93\x5b\x45\xc7\xb5\x01\x00\x00")

func _1_create_pgstream_xidDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__1_create_pgstream_xidDownSql,
		"1_create_pgstream_xid.down.sql",
	)
}

func _1_create_pgstream_xidDownSql() (*asset, error) {
	bytes, err := _1_create_pgstream_xidDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "1_create_pgstream_xid.down.sql", size: 437, mode: os.FileMode(420), modTime: time.Unix(1720000959, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __1_create_pgstream_xidUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x58\x6b\x73\xe2\x46\xd6\xfe\xce\xaf\x78\x6a\xca\x15\xa3\xf7\x6d\xcf\x20\x71\xf3\x65\x92\x2a\x59\xb4\x8d\x2a\x20\xb1\x92\x88\xc7\xeb\xf2\x52\x42\x6a\x40\x89\x2e\x44\x6a\x66\xc6\x95\xc9\xfe\xf6\xad\x6e\x81\x0d\x1e\x06\x1b\xb2\xb5\x9b\xaa\x8d\x3f\xc8\xa2\xfb\x9c\xe7\x5c\x9e\xd3\xa7\xd5\x7d\x72\x02\x23\x9b\x3f\xe4\xd1\x74\xc6\xa1\xd5\x34\x0d\x8e\x5f\x24\x8b\x02\xdd\x2c\x4e\x2a\x27\x27\x18\xb0\x3c\x89\x8a\x22\xca\x52\x44\x05\x66\x2c\x67\xe3\x07\x4c\x73\x3f\xe5\x2c\x24\x98\xe4\x8c\x21\x9b\x20\x98\xf9\xf9\x94\x11\xf0\x0c\x7e\xfa\x80\x39\xcb\x8b\x2c\x45\x36\xe6\x7e\x94\x46\xe9\x14\x3e\x82\x6c\xfe\x20\x24\xf9\x2c\x2a\x50\x64\x13\xfe\xc9\xcf\x19\xfc\x34\x84\x5f\x14\x59\x10\xf9\x9c\x85\x08\xb3\x60\x91\xb0\x94\xfb\x5c\xd8\x9b\x44\x31\x2b\x50\xe5\x33\x86\x37\xee\x52\xe3\x8d\x22\x8d\x84\xcc\x8f\x11\xa5\x10\x73\xab\x29\x7c\x8a\xf8\x2c\x5b\x70\xe4\xac\xe0\x79\x14\x08\x0c\x82\x28\x0d\xe2\x45\x28\x7c\x58\x4d\xc7\x51\x12\x2d\x2d\x08\x75\x19\x7a\x21\x40\x17\x05\x23\xd2\x4f\x82\x24\x0b\xa3\x89\xf8\xcf\x64\x58\xf3\xc5\x38\x8e\x8a\x19\x41\x18\x09\xe8\xf1\x82\x33\x82\x42\x0c\x06\x2c\x15\x5a\x7e\x1a\xbe\xcb\x72\x14\x2c\x8e\x05\x42\xc4\x8a\x32\xd6\x27\xef\xa4\x8c\xb0\x32\x17\x09\xe5\xcb\x14\x49\xbb\x9f\x66\x59\xb2\x19\x49\x54\x60\xb2\xc8\xd3\xa8\x98\x31\xa9\x13\x66\x28\x32\x69\xf1\x67\x16\x70\x31\x22\xc4\x27\x59\x1c\x67\x9f\x44\x68\x41\x96\x86\x91\x88\xa8\x38\x17\x9c\x79\x33\x06\x7f\x9c\x7d\x64\x32\x9a\x92\xdb\x34\xe3\x51\x50\x26\x5c\x52\x30\x7f\xe2\x75\x39\x55\xcc\xfc\x38\xc6\x98\x2d\x53\xc6\x42\x91\x60\x7f\x2d\xa0\x5c\x38\x50\x70\x3f\xe5\x91\x1f\x63\x9e\xe5\xd2\xe2\xf3\x40\xdf\x4a\x0f\xba\x14\xae\x7d\xe5\xdd\xe8\x0e\x85\xe9\x62\xe0\xd8\x3f\x99\x1d\xda\xc1\x1b\xdd\x85\xe9\xbe\x21\xb8\x31\xbd\xae\x3d\xf4\x70\xa3\x3b\x8e\x6e\x79\xb7\xb0\xaf\xa0\x5b\xb7\xf8\xd1\xb4\x3a\x04\xf4\xc3\xc0\xa1\xae\x0b\xdb\x81\xd9\x1f\xf4\x4c\xda\x21\x30\x2d\xa3\x37\xec\x98\xd6\x35\x2e\x87\x1e\x2c\xdb\x43\xcf\xec\x9b\x1e\xed\xc0\xb3\xa5\xc1\x25\x94\x49\x5d\x01\xd6\xa7\x8e\xd1\xd5\x2d\x4f\xbf\x34\x7b\xa6\x77\x4b\x70\x65\x7a\x96\xc0\xbc\xb2\x1d\xe8\x18\xe8\x8e\x67\x1a\xc3\x9e\xee\x60\x30\x74\x06\xb6\x4b\xa1\x5b\x1d\x58\xb6\x65\x5a\x57\x8e\x69\x5d\xd3\x3e\xb5\xbc\xb7\x30\x2d\x58\x36\xe8\x4f\xd4\xf2\xe0\x76\xf5\x5e\x4f\x9a\xd2\x87\x5e\xd7\x76\xa4\x7f\x86\x3d\xb8\x75\xcc\xeb\xae\x87\xae\xdd\xeb\x50\xc7\xc5\x25\x45\xcf\xd4\x2f\x7b\xb4\x34\x65\xdd\xc2\xe8\xe9\x66\x9f\xa0\xa3\xf7\xf5\x6b\x2a\xb5\x6c\xaf\x4b\x1d\x29\xb6\xf4\xee\xa6\x4b\xe5\x90\x69\x41\xb7\xa0\x1b\x9e\x69\x5b\x22\x0c\xc3\xb6\x3c\x47\x37\x3c\x02\xcf\x76\xbc\x47\xd5\x1b\xd3\xa5\x04\xba\x63\xba\x22\x21\x57\x8e\xdd\x27\x10\xe9\xb4\xaf\x64\xce\x2c\xa1\x67\xd1\x12\x45\xa4\x7a\x93\x11\xdb\x91\xbf\x87\x2e\x7d\xf2\xa5\x43\xf5\x9e\x69\x5d\xbb\x42\x79\x5d\xf8\x6d\x45\x10\xfa\x39\x0a\x31\x59\xa4\x41\x49\xf9\x24\xcf\x12\xcc\x38\x9f\x17\xe7\xef\xde\x4d\x23\x3e\x5b\x8c\xdf\x06\x59\xf2\x2e\xc9\xc2\x49\x94\xbe\x9b\x4f\x4f\x3e\x47\x21\xc1\x78\xc1\x91\xfa\x09\x2b\xe6\x7e\xc0\x44\x8f\x48\xa7\x2c\x94\xca\x02\x52\x2e\xaa\x40\x2e\x89\x69\xc1\x73\xe6\x27\x95\x4a\xc7\xc6\xd1\x11\x2e\xe9\xb5\x69\x55\x00\xc0\x70\xa8\xee\x51\x74\xec\xbe\x6e\x5a\x8f\x72\x6f\x85\x37\xba\x0b\xa3\xab\x3b\x55\xad\xa6\xc0\xe8\x52\xe3\x47\x54\x7f\xd2\x7b\x43\x8a\x7f\xe2\xf8\x1f\x77\xfe\xc9\xc7\xda\xc9\xd9\xfd\x6f\x5a\xed\xf7\xa3\x63\xe5\xa2\x42\x3f\x18\x74\x20\xb2\x21\x61\x6f\xba\xd4\x42\xb8\x98\xc7\x51\xe0\x73\x36\xca\xca\x65\xe5\x89\xd1\x74\x11\xc7\x17\x15\x6a\x75\x70\x74\x74\x51\xa9\x2c\x1d\x70\xe9\xdf\x86\xd4\x32\x28\xcc\x2b\x59\x79\xf4\x83\xe9\x7a\xee\x86\x43\xa3\x82\xe5\x62\x5d\xf4\x4d\xab\xf4\xa3\x86\xbe\xfe\xa1\x7c\x55\x5b\xed\x76\x5b\x53\x9b\x30\x6e\x8d\x1e\xbd\xc0\xc9\x09\x50\xad\x6a\xcd\xe6\xfb\xf7\x6a\x4b\xc1\xff\xa3\x7c\x3f\x15\xaf\x5a\xb3\xa9\x28\x95\x8a\x4b\x7b\xd4\xf0\x50\x30\xfe\xd1\x8f\xab\xc7\x5b\x2c\x1d\x13\x54\x73\x3f\x0d\xb3\xa4\xaa\xe0\xff\x1e\x6d\x28\xe7\xe7\xa6\xe5\x29\xaf\x32\xb2\x8c\xce\x76\xe0\xd0\x41\x4f\x37\x28\xae\x86\x56\x59\x34\x8f\x06\x47\xc2\x62\xe2\x07\xb3\x28\x65\xa3\x28\xac\x2a\x32\x83\x0e\xf5\x86\x8e\x25\x8a\xc5\x93\xbf\x7b\xba\x75\x3d\xd4\xaf\x29\xe6\xf1\x7c\x5a\xfc\x1a\xcb\x41\xb3\xdf\x1f\x7a\x62\x21\x54\x74\xb7\x72\x74\x54\xe9\x50\xa3\xa7\x3b\xb4\xf2\xc4\x6f\x09\x83\xea\x2a\xda\x87\x82\xb3\x64\x14\x85\x2c\xe5\xd1\x24\x62\x39\xbe\x7b\xca\x9d\x28\x72\xcc\xa7\xa3\x20\x4b\x79\x9e\xc5\xa3\x52\xb8\xaa\x28\x92\xae\xca\x3a\x5d\x3b\x03\x12\xf1\xb0\x34\xc8\x42\x56\x1d\x45\xa2\xc9\xf1\xbb\xfb\xcd\xa0\xd6\x45\xb7\x47\xb7\x19\x8f\x10\x29\x21\x45\x33\x96\x55\xa9\x2a\x77\xf7\xf8\x1e\xc7\xbf\xd5\x08\x54\x02\x8d\xa0\x4e\xd0\x20\x68\x12\xb4\x08\xda\x04\xa7\x04\x67\x04\x3e\xc1\x98\x20\x20\x08\x09\x18\xc1\x84\x60\x4a\x30\x23\x88\x08\x7e\x26\xf8\x85\x20\x26\x48\x08\x52\x82\x8c\x60\x4e\xf0\x2b\x41\x4e\x50\x10\x70\x82\x05\xc1\xc7\xdf\x8f\x2f\xbe\xce\xe6\xa3\x2b\x77\xaa\x60\x7d\x14\x85\x77\xea\x3d\x7e\xf8\x01\x75\xe5\x5e\xca\xad\xfd\x7d\xf9\xf2\x5c\x5c\xca\x6b\x52\xbe\xa5\xe0\x3b\xd4\x55\x7c\x79\x04\x79\xff\x1e\x5a\x39\xb8\x27\x94\xba\xa7\x56\x5d\x6a\x35\x36\x1d\xd0\xa4\x03\x8d\xd7\x43\x09\xa5\x86\x44\x6a\xaf\x30\xea\x12\x63\x5f\x77\x4a\x90\x3d\x42\x17\x4a\x4d\xa9\xd4\x5c\x59\x6e\x48\xcb\xf5\xbd\x31\xf6\x11\x6f\xed\xc9\x73\x7b\x1b\xcf\xad\x83\x78\x6e\x1f\xc4\xf3\xe9\x36\x9e\xdb\x87\xf0\x7c\xb6\xc9\xf3\xe9\x41\x3c\x9f\xed\xcb\x73\xb9\x30\x6a\x25\xd3\xca\xca\xf8\xd9\x21\x54\x0b\x94\xbd\xe4\xf7\x5d\xd4\xea\xf6\x55\x7d\xd8\xb2\x56\xbf\xb5\xae\x77\xc8\xaf\x93\x2a\x9b\xf6\xc5\x7e\x5d\x3b\x64\x65\xd7\x16\xdb\xff\xfa\xc4\x66\xf7\x96\x0d\xfd\xd5\x6d\x3b\x64\x41\xa9\x21\xbb\xb5\xd6\x6c\x12\xfc\x6f\x3c\x76\x6f\x4c\xff\x7d\xff\xfe\xf0\x43\x15\x11\xaa\x04\xaa\x46\xa0\xd6\x09\xd4\x06\x81\x2a\xc6\x5b\x04\x6a\x9b\x40\x3d\x25\x50\x45\xa8\x35\x02\x4d\xa4\x42\x23\xd0\xea\x04\x5a\x43\x00\x10\x68\x2d\x02\xad\x4d\xa0\x9d\x12\x68\x67\x04\xf5\x1a\x41\x5d\xfd\x33\x44\xf6\xd7\xe3\xaf\xc7\xab\x1e\xe2\xf3\x50\x76\xb9\x31\x80\xf1\x03\x67\xfe\xfa\xe7\xe2\x68\x8c\xf3\xef\x21\xba\xe9\xf9\xf9\xe5\xad\x47\xf5\x52\x38\x67\x7c\x91\xa7\x10\x87\xe9\x5b\xdc\x6d\x6c\x07\xd5\xaa\xe8\x97\x77\x53\xc6\x47\x02\xad\x3a\x1a\x13\xd4\x94\xd5\x66\x27\x36\x94\xaf\xa6\x55\x65\xb9\xa5\x8a\xc6\x2f\xfc\x7a\x11\x50\x2d\x01\x5b\xdf\x00\xd4\x94\xd5\xce\xbe\x75\xba\xae\x2c\xbf\x28\x5e\x6d\xaf\xae\xac\x76\xa6\xad\x80\x0d\x65\xb9\xd1\xbd\x1a\xb0\x51\x02\xb6\xbf\x01\xd8\x54\x56\x1b\xee\xd6\xe9\x96\xb2\xdc\xd6\x5f\x6d\xaf\x55\x02\x36\xbf\x01\xd8\x56\xee\x5f\x8f\x75\xba\x9b\xcd\xb3\xbd\xd9\x3c\xdb\xcd\xa6\x5a\xdb\x4d\xa7\xaa\xee\xcd\xa7\xaa\xee\x26\x54\xd5\xf6\x66\x54\xd5\x76\x53\xaa\xd6\x77\x73\xaa\x36\xf6\x26\x55\x6d\xec\x66\x55\x6d\xee\x43\xab\xda\x7a\x61\x95\xb6\xf7\x5f\xa6\xed\x17\x98\x3d\x7d\x81\xd9\xb3\x67\xcc\x3e\x5a\x3c\xe4\xdb\xb0\x3a\xf2\x39\x3c\xb3\x4f\x5d\x4f\xef\x0f\xbc\xbf\xa3\x43\xaf\xf4\x61\xcf\x83\x31\x74\x1c\x6a\x79\xa3\xc7\xb9\x7f\xc3\x51\x9f\xc3\xb4\xbc\x65\x67\x4d\xd6\xde\xe7\x6b\xef\x41\xf9\xbe\xd6\x6d\xb9\xe8\xb6\x93\x38\xcb\xf2\x2a\xfd\x20\xef\xf4\xaa\x6c\x9e\x05\xb3\xf2\x62\x63\xe4\x73\x45\x79\xc4\x3c\xff\x7e\xc7\x05\xcc\xa3\x35\x29\x35\x1a\xfb\xc1\x2f\x2c\x0d\x47\xf3\xb5\xb9\x40\xcc\xa5\xec\xf3\xb7\x2f\x8f\xca\x6b\xa2\x8b\xca\x7a\xcb\xdf\x76\x45\xb2\x75\x1b\x18\x71\x59\x2c\x8d\x55\xb1\xac\x46\xd4\xd6\xf3\x91\xd3\xe5\x00\x88\x48\xc0\xb6\xd2\x1a\x25\x5f\x69\x26\xcf\x35\x93\xed\x9a\xf3\x75\x39\x22\x32\xb2\x55\x2c\xf8\xca\x40\xf0\xdc\x40\xf0\xbc\x04\x95\x43\xce\x27\x3c\x4a\x5e\x3c\x9d\xac\xd5\xe8\xab\xeb\x6d\x75\x4b\xb5\x51\x4e\x51\xb8\x51\x25\xcf\xce\x47\xca\xc6\x5e\xce\x33\xe9\x5b\xc1\xfd\x64\x5e\x5d\xbf\xcb\x69\x28\xe7\xe7\x97\xe6\xb5\x69\x79\xab\x53\x65\x79\x4c\x5b\x5e\x18\x3e\x5d\x98\x9c\x2a\x4f\xf7\x29\xca\x41\xc9\x59\x56\xf0\x4b\xf9\x31\x2d\x6f\x8f\xd3\xdb\x1f\xce\xcc\xb2\xbc\xcb\xab\x16\x82\xf2\xfa\xa3\xfc\xdf\xbe\x3f\xe8\x90\x2a\x96\xe1\xcb\x31\xfe\xe7\x22\x5c\xbb\x0d\x79\x22\xf1\xec\xb0\x02\x0f\xb2\x45\xca\x59\xfe\xe7\x8b\x4f\xad\x3d\x2f\xdb\xe5\xb5\xc6\x53\xc8\xaa\xb6\x11\xf3\xbf\x02\x00\x00\xff\xff\xe6\x0a\xf8\x30\xf9\x1c\x00\x00")

func _1_create_pgstream_xidUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__1_create_pgstream_xidUpSql,
		"1_create_pgstream_xid.up.sql",
	)
}

func _1_create_pgstream_xidUpSql() (*asset, error) {
	bytes, err := _1_create_pgstream_xidUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "1_create_pgstream_xid.up.sql", size: 7417, mode: os.FileMode(420), modTime: time.Unix(1720000959, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __2_create_pgstream_schemalog_tableDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x08\x71\x74\xf2\x71\x55\xf0\x74\x53\x70\x8d\xf0\x0c\x0e\x09\x56\x28\x48\x2f\x2e\x29\x4a\x4d\xcc\xd5\x2b\x4e\xce\x48\xcd\x4d\x8c\xcf\xc9\x4f\xb7\xe6\x02\x04\x00\x00\xff\xff\xea\x95\xfd\x5d\x2a\x00\x00\x00")

func _2_create_pgstream_schemalog_tableDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__2_create_pgstream_schemalog_tableDownSql,
		"2_create_pgstream_schemalog_table.down.sql",
	)
}

func _2_create_pgstream_schemalog_tableDownSql() (*asset, error) {
	bytes, err := _2_create_pgstream_schemalog_tableDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "2_create_pgstream_schemalog_table.down.sql", size: 42, mode: os.FileMode(420), modTime: time.Unix(1720000959, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __2_create_pgstream_schemalog_tableUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x91\x41\x6f\xe2\x30\x14\x84\xef\xf9\x15\x73\x83\x48\x61\xa5\xbd\x2e\xda\x83\x43\x5e\x76\xdd\x3a\x0e\x4d\x1c\x01\xa7\x10\x11\x97\x5a\x10\x4c\x49\xa8\xfa\xf3\x2b\x42\x80\x42\xa9\x7a\xf2\x61\xe6\xbd\x6f\xfc\x66\x94\x10\x53\x04\xc5\x7c\x41\xe0\x21\x64\xac\x40\x53\x9e\xaa\x14\xdb\x65\xdd\xec\x74\x51\xfd\xaa\x17\x2f\xba\x2a\xf2\xb5\x5d\xa2\xef\x00\x80\x29\x2f\xe2\xbb\x29\x31\x4e\x78\xc4\x92\x19\x1e\x69\x86\x80\x42\x96\x09\x75\x65\xe8\xbb\x5e\x3b\xf7\xa6\x77\xb5\xb1\x1b\xf8\xfc\x1f\x97\xaa\x65\xc9\x4c\x88\xa3\xd8\x51\x36\x45\xa5\xa1\x68\x7a\x5f\xc6\x43\x1a\x4b\xff\x46\x5a\xec\x74\xd1\xe8\x32\x2f\x1a\x28\x1e\x51\xaa\x58\x34\x3e\x5b\xce\x81\x64\x3c\x39\xe5\x28\x16\x2b\x5d\xc2\x8f\x63\x41\x4c\x7e\x75\x86\x4c\xa4\xe4\xb8\x43\xc7\x19\x0c\x50\xd9\xba\xc1\xda\xda\xd5\x7e\x5b\xb7\x2f\xd6\x66\xa5\xff\x1c\xa4\x79\x4a\x82\x46\x0a\xa6\xf4\x4e\xf1\xc2\x24\x8e\xee\x1e\x6e\xf2\x9f\x12\xba\xfa\xe3\x5f\xf4\x9e\xad\xed\x81\xc9\xa0\x8d\x70\x0c\x15\x27\x01\x25\xf0\x67\x87\x1b\x07\x94\x8e\x20\x78\xc4\x15\x7e\xcf\x9d\xae\x29\x2e\x03\x9a\xde\x34\x75\xe1\xb4\xab\xf3\x6e\x95\xbc\x5f\xe1\xa7\x10\xde\x91\xea\xc1\x94\xee\xf0\x44\xc8\x24\x7f\xca\x7e\x04\x75\x5d\xe6\xfb\x8d\x79\xfd\x06\x75\x4d\xea\x06\xdc\xa1\xf3\x11\x00\x00\xff\xff\x97\x55\xe8\xae\x74\x02\x00\x00")

func _2_create_pgstream_schemalog_tableUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__2_create_pgstream_schemalog_tableUpSql,
		"2_create_pgstream_schemalog_table.up.sql",
	)
}

func _2_create_pgstream_schemalog_tableUpSql() (*asset, error) {
	bytes, err := _2_create_pgstream_schemalog_tableUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "2_create_pgstream_schemalog_table.up.sql", size: 628, mode: os.FileMode(420), modTime: time.Unix(1720000959, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __3_create_pgstream_tableids_tableDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x70\x0b\xf5\x73\x0e\xf1\xf4\xf7\x53\xf0\x74\x53\x70\x8d\xf0\x0c\x0e\x09\x56\x28\x48\x2f\x2e\x29\x4a\x4d\xcc\xd5\x4b\x2e\x4a\x4d\x2c\x49\x8d\x2f\x49\x4c\xca\x49\x8d\xcf\x4d\x2c\x28\xc8\xcc\x4b\xb7\xe6\x02\x6b\x0b\x71\x74\xf2\x71\xc5\xa6\x07\xa2\x38\x33\xa5\xd8\x9a\x0b\x10\x00\x00\xff\xff\x89\x55\x03\x71\x60\x00\x00\x00")

func _3_create_pgstream_tableids_tableDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__3_create_pgstream_tableids_tableDownSql,
		"3_create_pgstream_tableids_table.down.sql",
	)
}

func _3_create_pgstream_tableids_tableDownSql() (*asset, error) {
	bytes, err := _3_create_pgstream_tableids_tableDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "3_create_pgstream_tableids_table.down.sql", size: 96, mode: os.FileMode(420), modTime: time.Unix(1720000959, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __3_create_pgstream_tableids_tableUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x90\xcd\x6e\xea\x30\x14\x84\xf7\x79\x8a\x59\x64\x01\x12\xdc\x17\x40\x77\x61\xb8\x87\xc8\xba\xae\x03\xfe\xa9\xca\x2a\x32\xd8\x0a\x96\x80\x44\x89\xa5\xf6\xf1\x2b\x4c\x01\x21\x75\x67\x9f\x39\x33\xf3\xd9\xf3\x39\x92\xdb\x9f\x42\x13\xfd\x88\x31\x75\x43\x18\x91\x8e\x01\x67\xd7\xf7\xf1\xd2\x62\x1f\xd2\x67\x08\x97\x3c\xeb\xdb\x31\x0d\xc1\x9d\x6f\x0e\x44\x0f\x77\xf1\x59\xd9\x74\x63\x6a\xb3\x35\x2b\x5d\xf4\xc5\x4a\x11\x33\x04\xc3\x96\x82\xc0\xd7\x90\xb5\x01\x7d\x70\x6d\xf4\x23\xe7\xcf\xb3\x79\x52\x00\xb8\x26\x3e\xb4\xaf\xe8\xb1\x51\xfc\x8d\xa9\x1d\xfe\xd3\x0e\xff\x68\xcd\xac\x30\x2f\x0b\x93\xe9\x2c\xfb\xba\xe8\xb1\xe4\x15\x97\x26\xd7\x48\x2b\x04\xac\xe4\x5b\x4b\xc5\x74\x51\xdc\x51\x6a\x05\x45\x1b\xc1\x56\x84\xb5\x95\x2b\xc3\x6b\xf9\x4c\x3b\x0c\xc1\xa5\xd0\xdc\x88\x7e\x1e\x3f\xb9\xdd\xae\xe9\x5d\xf4\x53\x28\x32\x56\x49\xfd\x82\x90\xfb\x05\x93\x95\x65\x15\x41\x6f\x45\x1e\x68\x32\x18\x83\x1b\x0e\xc7\xa6\x77\xe9\x88\xbf\xe8\xdb\xe6\xe0\x92\x3b\x75\xed\xac\x6f\x9b\x14\xce\x7d\x5e\x64\x1a\x65\x99\x4f\x5c\x6a\x52\x06\x5c\x9a\xfa\xd7\x0f\xca\x04\xef\x4c\x58\xd2\x78\x82\xdd\xa1\xb8\xac\x10\xfd\xa2\x28\xcb\x45\xf1\x1d\x00\x00\xff\xff\xe5\x65\xe2\xd8\xd3\x01\x00\x00")

func _3_create_pgstream_tableids_tableUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__3_create_pgstream_tableids_tableUpSql,
		"3_create_pgstream_tableids_table.up.sql",
	)
}

func _3_create_pgstream_tableids_tableUpSql() (*asset, error) {
	bytes, err := _3_create_pgstream_tableids_tableUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "3_create_pgstream_tableids_table.up.sql", size: 467, mode: os.FileMode(420), modTime: time.Unix(1720000959, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __4_create_pgstream_get_schema_functionDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x70\x0b\xf5\x73\x0e\xf1\xf4\xf7\x53\xf0\x74\x53\x70\x8d\xf0\x0c\x0e\x09\x56\x28\x48\x2f\x2e\x29\x4a\x4d\xcc\xd5\x4b\x4f\x2d\x89\x2f\x4e\xce\x48\xcd\x4d\xb4\xe6\x02\x04\x00\x00\xff\xff\x99\x21\xb8\x23\x2d\x00\x00\x00")

func _4_create_pgstream_get_schema_functionDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__4_create_pgstream_get_schema_functionDownSql,
		"4_create_pgstream_get_schema_function.down.sql",
	)
}

func _4_create_pgstream_get_schema_functionDownSql() (*asset, error) {
	bytes, err := _4_create_pgstream_get_schema_functionDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "4_create_pgstream_get_schema_function.down.sql", size: 45, mode: os.FileMode(420), modTime: time.Unix(1720000959, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __4_create_pgstream_get_schema_functionUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x56\x4d\x6f\xdb\x38\x13\xbe\xfb\x57\xcc\x21\x85\x6c\xc0\x16\xd0\x6b\x8a\x14\xaf\xdf\xc4\x4d\xbd\xc8\x3a\x5d\xdb\x41\x5b\x14\x85\x42\x8b\x13\x89\x8d\x4c\x6a\x49\x2a\xad\xff\xfd\x82\xa4\x24\x4b\x22\xed\xcd\x56\x87\x38\x12\xe7\x99\x6f\x3e\x33\xb3\x19\xe8\x9c\x29\x78\xaa\x78\xaa\x99\xe0\xc0\x14\xa4\xa4\x28\x90\x02\x92\x34\x07\xcd\xf6\x08\x04\xd2\x9c\xf0\x0c\x41\x0b\x20\x90\xb1\x17\xe4\xa0\xd2\x1c\xf7\xc4\x88\xef\x09\xc5\x18\x96\x1a\x7e\xb2\xa2\x00\xa5\x85\x44\xd0\x39\x82\x44\x55\x15\x1a\xc4\x93\x7d\xab\xe5\x9d\xa2\xd1\x6c\x06\x3f\x73\x96\xe6\x0e\xa3\x73\xe4\xb0\x33\x88\xb2\x60\x29\xd1\x48\x63\xd8\xe6\x08\xa2\xd2\x65\xa5\x41\x69\x59\xa5\xba\x92\xe8\xac\x95\x25\x52\x60\xdc\x6a\x4d\x05\xc5\x1d\x51\x38\x85\xb2\x40\xa2\x10\x34\x79\x46\x48\x89\x91\x7d\x02\xa4\x4c\x33\x9e\xc5\xa3\xd9\xcc\x58\xfc\x8c\x90\x93\x17\xe7\xdc\x13\x93\xca\x68\xc6\x12\x1e\x7f\x32\x9d\x83\x26\xbb\x02\x13\xc1\xa8\x02\xa2\x60\x0c\x71\x1c\xc3\xe4\xd1\xd8\x11\x92\xa2\x34\xa1\x67\x92\xec\x60\x79\xa3\x40\xe7\x44\x3b\x55\xa4\x90\x48\xe8\x01\x76\x88\x1c\x32\xe4\x28\x8d\xf7\x53\x20\x9c\x1a\x8b\x8c\x2b\x94\x1a\x74\x2e\x8c\x6b\x06\x45\x05\x8f\x34\x1c\xb0\xc6\x2f\x6f\x94\x49\x5d\xa4\xcc\x01\x42\xc1\x9e\xd1\xd5\x43\x0b\xc8\xb1\x28\xc1\xfa\x56\xa2\x7c\x12\x72\x4f\x78\x8a\xf1\xe8\x7a\xbd\x98\x6f\x17\x70\xbf\x86\xf5\xe2\xd3\xdd\xfc\x7a\x01\x1f\x1e\x56\xd7\xdb\xe5\xfd\x0a\xca\x4c\x69\x89\x64\x1f\x67\xa8\x13\x97\xf0\xb1\xfb\x49\x38\xd9\x23\x6c\x17\x5f\xb6\x13\x58\x2f\xb6\x0f\xeb\xd5\x06\x7e\x28\xc1\x77\x23\x00\x80\xbb\xf9\xea\xf6\x61\x7e\xbb\x80\xcd\x5f\x77\xf6\xc3\x66\xb1\x05\x85\x44\xa6\x79\x52\x12\x9d\xc3\x15\x94\x59\x92\x12\x4d\x0a\x91\x4d\xcb\x2c\xd1\xb8\x2f\xad\xe0\x7c\x03\x17\x17\xa3\xcf\xcb\xed\xc7\x6e\x02\xe7\x1b\x18\xdb\x63\x7b\x80\xbf\x98\x32\x65\x18\x9c\x39\x3b\x77\x8b\xeb\x2d\xdc\x2c\x37\xdb\xe5\xea\x7a\xdb\x7e\x37\x4f\x99\x59\xa7\x55\x49\x52\x8c\xb9\x2a\x6d\x04\xf3\x0d\x74\x02\x9a\x0e\x01\x69\x41\x94\x8a\x25\x16\x8d\xb0\x73\xea\x8c\xac\x60\xf4\x28\x27\x18\x6d\xa5\x3e\xac\xef\xff\xec\xf9\xd0\xc3\xdb\x67\xbd\xbc\xfd\xb8\x85\x3f\xee\x97\xab\x56\x1f\xd8\x2a\x74\x1c\x37\xfa\xaf\x3c\xd7\xec\x19\xcc\x57\x37\xbd\x93\x67\xc6\x29\x2c\x57\x30\x8e\x64\x34\x85\xa8\x8c\x26\xad\xcd\xcf\x1f\x17\xeb\x45\x38\x25\x57\xdd\x8c\x58\xc0\x64\x74\xcc\x6d\xab\xa1\x57\x85\x38\x98\xc4\xbe\x48\x28\x75\x21\x09\xc1\xe8\x51\x20\x15\xa4\x40\x95\xe2\xb8\x6d\x45\x27\x64\xc4\x19\x9d\x1e\x3b\x34\x95\x48\x34\x26\xee\xd4\xdc\x69\xc6\xb3\xf1\x09\xf5\x93\xc9\xb1\x44\x65\xa6\x92\xba\x4a\xb6\x42\x3d\x48\xbf\x44\x77\x8b\x0f\x6d\x75\x86\xce\x98\x3a\x9d\xb0\x66\xcb\xe5\x39\x6f\x5a\x63\x52\xc7\x99\x8a\xa2\xda\xf3\x41\x2b\x0f\xf3\x6d\x9f\xe3\x9d\xe8\xa4\xf3\x5c\x5f\xfa\x88\x61\x83\xfe\x9b\xbc\x4b\xd0\x30\x61\x03\x94\x65\x13\x3d\x8e\xde\xa8\xd9\x1b\x15\x4d\x4f\x69\x31\xf5\x4a\x88\xd6\x92\xed\x2a\x8d\x31\xd1\x9a\x57\x7b\x5b\x0c\x97\x82\xb0\x72\x0f\x53\xc7\x5c\x63\x02\x41\x3b\x77\x12\x7d\x28\x4d\xe3\xf4\xd1\xfa\x50\x86\x1c\xd1\x87\x72\x2f\x68\xd7\x17\x83\xf6\x3d\x31\x4c\x88\xbf\x4a\xd9\xe8\xa5\xf8\x14\x13\xba\x63\xbc\x55\xe9\xbe\x48\x2c\x58\x4f\x1d\xc5\x27\x52\x15\x7a\xa0\x71\x75\xbf\x85\xb1\x1f\xa1\xd0\xbc\x2a\x0a\xc3\xc9\x86\x1c\x0f\x25\xc6\xfa\x50\x9a\x5f\xb8\x82\x88\x46\xcd\x4d\x6f\x4e\x6a\xf9\xae\x39\xf3\x6e\x32\x3f\xb0\x37\x5e\x7c\x59\x6e\xb6\xbd\x3e\xeb\xb5\x1b\xbc\xf5\x0e\x1a\xe2\x4a\x05\x57\x5a\x12\xc6\xb5\x27\xe2\xd8\x24\x15\xdc\x46\xed\xf8\xa9\x17\x90\xfd\xee\xc1\x4c\x14\xf3\xf5\x7a\xfe\xf5\x5b\xa0\x2d\x2e\x2f\x19\xd7\xdf\xe1\x7f\xef\x8d\xde\x67\x3c\xd8\xf7\x6f\xdf\x83\x4a\x52\xc1\x9b\xe4\x54\xd1\x40\x62\x62\xb2\xf8\xfb\x51\x33\x4e\xf1\x97\x77\x1a\xe2\xe8\x23\xff\x5f\xb5\xc0\xd8\xfe\x0d\x47\xef\x92\xc6\x38\xfd\xef\x49\x63\x9c\x32\x55\x71\xf6\x77\xe5\x4f\x91\x57\x26\xb5\xeb\xe1\xa9\xec\x4e\xba\x0d\xe5\xcc\xf9\x17\xa2\x9e\xe2\x71\x2a\x8a\x84\xa2\x4a\x25\x2b\xcd\xde\x37\x0e\x11\xcf\xf4\xd4\xf5\xdf\xa3\x26\x94\x68\x32\xf2\xf2\xdf\x8a\xfb\xe3\xd2\x55\xa1\xb3\x26\xb8\x3a\xf8\x39\x84\xab\x20\x0d\x9e\xd2\x58\x5f\xac\x90\x3a\x4b\x1e\xae\x54\xf6\xee\x85\xb5\x74\x07\x45\x43\x09\xe7\x9c\xf3\x89\xa3\xb9\xe0\xc3\x64\x0d\x85\x79\xb5\x1f\x0d\x1a\x2a\x84\x7a\x7f\x05\x6f\x61\x36\x83\x02\x95\x5d\x36\x39\xbc\x35\xab\xaf\x44\x85\xf2\x05\xa9\xe1\x4b\x50\x07\xa5\x71\x6f\xbe\x89\x4a\xa6\xd8\x9b\x7d\xc6\x1b\xc3\x54\x43\xdd\x4c\x51\x29\xec\xfa\x6c\xf6\x6f\xb3\x79\xef\x10\x1e\xb5\xac\xf0\xd1\xac\xcb\xae\x73\x8c\xa5\x1d\x32\x9e\x41\x2d\xec\x34\x37\xc3\x6f\x77\x70\x43\xfb\x15\xd3\xaf\x9e\x93\xc1\x4d\x22\x20\xe0\x0f\xb7\xfe\xf9\xab\x26\x9b\x5d\x6a\x13\x92\x65\x63\xf7\xdf\xae\x62\x05\x4d\xc4\xee\x07\xa6\xda\xa7\x13\xfb\x44\xcd\xb8\x4f\x18\x8d\xa6\xad\xd1\x73\x23\xae\x85\x9a\xa0\x7c\x4c\x20\xd4\x16\x61\xfa\xd0\x47\x04\x86\x57\x8b\xa8\x27\x91\x0f\x0a\x8f\xa8\xa3\x6f\xf5\x48\x09\xf8\x17\x1e\x36\x2d\xd2\x71\x87\x8f\x0b\x72\x4a\x8b\x6a\x48\xa1\x83\xf3\x79\xa2\x79\xba\x3b\x5d\x2d\x3d\x1c\x7d\xa7\xc8\xff\xfa\x7e\x7e\xb7\xd8\x5c\x2f\x6c\x85\x6d\xa9\x43\x1b\xc7\x64\x0a\xd1\xb7\xef\xd1\xe5\xa5\x91\x9a\x9c\x9f\x17\xd3\xf3\xcc\x65\x2f\x6a\x30\xe8\xce\x34\xf0\x7a\xd9\xdc\xc2\x20\xe8\x14\xad\xfc\xbe\x06\xc7\x34\x84\x1f\xc6\x83\x31\xe1\xc7\x0d\xdd\x91\x54\x4a\xb6\x27\xf2\xe0\x4d\xe0\xf9\x06\xea\xa3\xe4\x19\x0f\x4d\x7d\x06\x64\xef\x7d\xbd\x5d\xdf\x3f\x7c\x82\xff\x7f\xed\x2e\xb7\x9d\xbd\xd5\x5f\xe0\x5b\x4e\x21\x2a\x31\x55\x7a\x05\xa5\xbc\xfe\x52\x5b\x6b\x2a\x3a\xd1\xac\xbf\x41\x13\xad\x66\x61\x69\xa2\xe1\xc1\x93\xe4\xe5\xe1\xfa\x34\x33\xc0\x9f\xa5\x99\x56\x45\x4d\x37\x03\xec\x19\xba\x69\x91\x75\xb5\x7c\x70\xf8\xf2\xf9\xce\xfb\xfd\xd0\xd5\x75\xb6\x5d\x86\xcf\x24\xd0\x96\xb6\xe9\x5e\x06\x2d\xd6\xa8\xaf\xbb\x65\x54\x13\xc0\x8b\x3b\xad\xbb\xe6\xdd\xe8\xe2\xe2\xdd\xe8\x9f\x00\x00\x00\xff\xff\x6e\x90\xca\xb8\xc8\x12\x00\x00")

func _4_create_pgstream_get_schema_functionUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__4_create_pgstream_get_schema_functionUpSql,
		"4_create_pgstream_get_schema_function.up.sql",
	)
}

func _4_create_pgstream_get_schema_functionUpSql() (*asset, error) {
	bytes, err := _4_create_pgstream_get_schema_functionUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "4_create_pgstream_get_schema_function.up.sql", size: 4808, mode: os.FileMode(420), modTime: time.Unix(1720000959, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __5_create_pgstream_log_schema_functionDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x70\x0b\xf5\x73\x0e\xf1\xf4\xf7\x53\xf0\x74\x53\x70\x8d\xf0\x0c\x0e\x09\x56\x28\x48\x2f\x2e\x29\x4a\x4d\xcc\xd5\xcb\xc9\x4f\x8f\x2f\x4e\xce\x48\xcd\x4d\xb4\xe6\x22\xa8\x38\xb3\x38\xbe\xb8\xb2\xb8\x24\x35\x17\xae\x05\x10\x00\x00\xff\xff\x85\x0a\x26\x0e\x60\x00\x00\x00")

func _5_create_pgstream_log_schema_functionDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__5_create_pgstream_log_schema_functionDownSql,
		"5_create_pgstream_log_schema_function.down.sql",
	)
}

func _5_create_pgstream_log_schema_functionDownSql() (*asset, error) {
	bytes, err := _5_create_pgstream_log_schema_functionDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "5_create_pgstream_log_schema_function.down.sql", size: 96, mode: os.FileMode(420), modTime: time.Unix(1720000959, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __5_create_pgstream_log_schema_functionUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x58\x4d\x8f\xdb\x36\x10\xbd\xfb\x57\x0c\x8c\x05\x64\xa1\x5a\x03\x39\x15\xb0\xbb\x05\x1c\x9b\x4e\x04\x38\x72\x20\xcb\x4d\x73\xd2\xd2\xd2\x58\xe6\x86\x26\x15\x91\xde\x5d\xa3\xe8\x7f\x2f\x48\x51\xf2\xd7\xba\x69\xd3\x00\x39\x34\xa7\x48\x24\x35\xf3\xde\x9b\x99\x67\x66\xc7\x31\x19\x25\x04\xe6\x31\xc4\xe4\xfd\x6c\x34\x26\x30\x5d\x46\xe3\x24\x9c\x47\x50\x16\x4a\x57\x48\xb7\x7d\xa6\x52\xb5\x57\x1a\xb7\xa9\xca\x36\xb8\xa5\xbd\xfa\x9f\x54\xd0\x2d\x82\xc6\x67\xed\x43\x4c\x92\x65\x1c\x2d\x60\x25\x25\x47\x2a\x60\xb4\x80\x9b\x9b\xce\x6b\xf2\x26\x8c\x3a\x00\xe0\xf6\xe1\xf8\xc3\x30\x82\x9e\xd7\xe4\xf0\x02\xf0\xca\xa2\x92\x9c\x7b\xfe\xb0\x43\xa2\xc9\xb0\x73\x73\x03\xb3\x51\xf4\x66\x39\x7a\x43\xa0\xe4\x65\xa1\x3e\xf3\x61\xa7\xf3\x4f\xf0\x72\x59\x34\x48\x0f\xc8\xf0\x11\x85\x4e\x75\xc5\x8a\x02\x2b\x8b\xe9\x3c\xba\x5d\x5c\x90\xf1\x32\x0e\x93\x8f\x30\x21\xd3\x30\x22\xb1\x5b\x4c\x40\x21\xad\xb2\x4d\x5a\x52\xbd\x81\x3b\x28\x8b\x34\xa3\x9a\x72\x59\x04\x65\x91\x6a\xdc\x96\xf6\x60\x4d\x7b\x42\xc6\xb3\x51\x4c\xec\x4a\x85\x59\x2a\x57\x0f\x2c\x07\xc9\xf2\x21\xdc\xde\xc2\x4e\x61\x0e\x6b\x59\x41\x8e\x1c\x35\xaa\xf6\xd8\xb9\xaa\x43\xbb\xe3\x56\x1f\xb1\x52\x4c\x0a\x58\xb1\x82\x09\xb7\x75\x5e\x97\x46\xfd\xe1\x91\xf0\xb7\xb7\xa0\x3e\xb1\x12\xb8\x2c\x0a\x26\x0a\x08\xa7\x07\x9d\xcc\x46\xca\x65\x01\x4c\x81\x42\x6d\xcf\x87\x53\xe8\x1d\xc8\xf5\xb3\x5d\x55\x19\xdd\x14\x6a\xcd\x44\x71\x28\x58\xfb\xb1\xa9\x5c\x12\x2f\x89\xe7\xc3\x5d\xfb\x94\xbc\x25\x75\xfa\x43\xed\x6b\xc8\x24\x9a\x40\x38\x1d\x76\x1a\x6c\x73\x81\x20\x4b\xac\xa8\x36\xe4\xb6\x74\x0f\x99\x14\x9a\x32\xf3\x2c\xf6\x75\xd1\xd4\x10\x50\x95\x98\x31\xca\xf9\x1e\x98\x00\xbd\x41\xc8\xa8\x42\x78\xda\xa0\x7d\xab\xd0\x53\xa0\xe9\x8a\xa3\x02\xbd\xa1\x1a\x72\x2c\x51\xe4\x20\x05\x28\xfc\xbc\x43\x91\xa1\x0a\x80\x89\x9c\x65\xa8\x60\x14\x4d\x6c\x08\xce\x3e\x61\x1f\x3e\x60\x83\x45\x57\x7b\xbb\xb7\x42\x50\x5b\x5a\x69\x30\x81\xed\x4a\x51\xd1\x95\xfd\xa4\x42\x8e\x8f\x54\x68\x57\x15\xb0\xb5\x52\x12\x9e\x0c\x20\x61\x44\x06\x29\xf8\x1e\xa4\xc8\xb0\xdf\x92\x0c\xd7\x20\x05\x02\x3e\x63\xb6\xd3\xa8\x80\xc2\xbd\x6b\xe3\x67\xa3\x77\x34\x4f\x80\xfc\x1e\x2e\x92\x05\xec\x87\xf7\x2d\xbc\x0a\x95\xdc\x55\x19\x42\x2e\x51\x19\xda\x6b\x9a\x69\xc0\x67\xa6\x74\x60\x12\x3e\x31\xce\x41\x48\x0d\x15\x16\x4c\x69\xac\xe0\xa0\x58\x1f\x92\x0d\xc2\x7d\x38\x85\x7e\xbf\x6f\xab\x01\xfd\xfe\x7d\xdb\x10\x9a\x6a\xdc\x9a\x73\x40\xf3\x87\x9d\xd2\xb6\x1d\xf5\x86\x29\x2b\x6b\xbf\x69\x04\x5d\xa4\x9a\x16\xa6\xac\x93\x78\xfe\x1e\x16\xe3\xb7\xe4\xdd\xc8\xab\x01\x16\xa9\xcd\x64\x36\xd5\x67\x9e\xe6\x95\x2c\xbd\xd3\xb2\x2f\xc8\x8c\x8c\x13\x90\xab\x07\xcc\x74\x33\xf2\xc9\xfc\xa2\xd5\xa7\xf1\xfc\x9d\x99\xa7\x93\x01\xb5\x01\x4b\xcc\xd3\xfa\x73\xd5\xf3\xe1\xc3\x5b\x12\x93\x26\x9c\xde\x97\x68\x73\xdb\x40\x1e\xcc\xc2\x77\x61\x02\xaf\x5c\x63\xbd\x38\x1c\x83\xbb\xbf\x71\xb4\x33\x50\xfe\x51\xa0\x70\x7a\x01\x39\x5c\xd8\xa2\x45\xcb\xd9\xcc\xaa\x61\x5e\x2e\xf2\x9d\x88\x71\x24\xc8\x78\x3e\x9a\x91\xc5\x98\xf4\x7a\x6e\xc1\x8d\xf6\x4f\xaf\x6a\x29\xba\x0d\xca\x6e\xbf\xeb\x92\x72\x59\x74\x1d\xff\x63\x18\x77\x17\xc0\xe6\xf1\x84\xc4\xf0\xfa\x63\x13\x13\x26\x64\x31\x6e\xc4\xf1\x03\x78\xe5\xd7\x35\x38\x35\x95\x23\xb2\xae\x43\x28\x38\xfd\x9b\x46\x37\x9d\x8d\xc2\x4c\x88\x69\x12\x29\x94\xa6\x42\x07\xb0\xa1\x0a\x84\x6c\x46\xcf\x48\x61\x56\x4c\xf7\x36\xdf\xaf\x39\x2d\x8c\xb9\x80\x96\xa0\xab\x9d\x6b\xae\x56\xdb\x68\x41\xe2\xa4\xc6\x74\x8d\x77\xcf\xa1\x0c\x8e\xb9\x37\x2f\x3e\xfc\x36\x9a\x2d\xc9\x02\x7a\xa7\x94\x82\x73\x69\x02\xf0\xfe\xe8\xd6\x38\xbb\x03\x10\x3b\xce\x03\xe8\x3a\x90\xdd\x81\x85\xf6\xa7\x37\x18\x3c\x28\x29\x56\xfe\xa5\x20\x15\x6e\xe5\x23\x02\xe5\xbc\x95\x82\xa1\x02\xb9\x06\xe7\x90\x0e\x4f\x00\x4f\x4c\x6f\xac\x02\xf8\x9c\x61\x69\x6d\x4d\xae\xc1\x73\xa9\xbc\x5a\xc5\x93\xf0\x13\x32\x23\x09\xf9\xef\xc5\x37\xf2\xf7\x9c\x0e\xb7\xbf\xb6\x19\xfd\xc1\xc0\xfc\x2e\xd8\xa6\x35\x0d\x3b\x8f\x6d\xbf\x5e\x3d\x78\x9d\xbd\xe4\x79\x5b\xd7\x46\x01\x67\xc7\x56\x59\x73\x00\x8d\x91\x50\x01\x3f\x43\x4e\xf7\xea\x2b\x79\x5e\x27\x61\x38\x66\x15\x52\x8d\x79\x4a\x35\xfc\x02\x42\x3e\xf5\x7c\xb8\x05\x26\x34\x56\x8f\x94\x83\x57\x67\xf6\x86\x6d\xee\xe6\x37\xc7\x3c\x23\x57\x6c\x7d\x6e\x6c\xc9\xe8\xf5\x8c\x7c\x85\xaf\xb1\x3c\x38\xbb\xd1\x38\x7b\x73\x7b\xdf\xd4\xe9\xac\xc2\x2f\x19\x9d\xf3\xa7\xfa\x92\x71\xec\x4c\x17\x06\x74\xad\x00\x36\x74\xca\x72\xd5\xe8\x2f\x59\xee\xfa\xcb\x46\xbd\x94\xf2\x87\xcb\x7e\x8d\xcb\x7e\x2f\xe7\x6b\x0b\x52\xa0\xbe\x56\x0a\xff\x0b\xf3\xd2\x4e\x45\x9e\xf3\x34\x93\xdb\x2d\x15\x79\x8a\x22\x3f\x1b\x8e\x93\x5b\x83\xbb\xe4\x34\xf7\x86\x6b\xa5\x72\x8d\xce\x72\x14\x9a\xe9\xfd\xbf\xba\x25\x1c\xc0\x7c\xf1\x8a\x60\xad\xc3\x01\x7f\x19\x60\x3b\x5b\x0d\xc0\x73\xb7\x70\xe7\x9d\x5f\x5c\xe3\xf3\xa2\x25\x7c\x1b\x2e\xce\x04\xae\x53\x71\xd0\xbe\xc8\x64\x34\x4b\x48\xfc\xbd\x88\xd8\xff\xf9\xd5\x54\x02\xc7\x09\x32\xc9\x77\x5b\xe1\xf9\x2f\x71\x3b\x01\x7b\x41\xed\x87\x27\xfd\xcf\x3c\xa9\x79\x76\x7f\x25\x18\x76\xfe\x0a\x00\x00\xff\xff\x48\x7f\x99\x33\xc4\x10\x00\x00")

func _5_create_pgstream_log_schema_functionUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__5_create_pgstream_log_schema_functionUpSql,
		"5_create_pgstream_log_schema_function.up.sql",
	)
}

func _5_create_pgstream_log_schema_functionUpSql() (*asset, error) {
	bytes, err := _5_create_pgstream_log_schema_functionUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "5_create_pgstream_log_schema_function.up.sql", size: 4292, mode: os.FileMode(420), modTime: time.Unix(1720000959, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __6_create_pgstream_refresh_schema_functionDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x70\x0b\xf5\x73\x0e\xf1\xf4\xf7\x53\xf0\x74\x53\x70\x8d\xf0\x0c\x0e\x09\x56\x28\x48\x2f\x2e\x29\x4a\x4d\xcc\xd5\x2b\x4a\x4d\x2b\x4a\x2d\xce\x88\x2f\x4e\xce\x48\xcd\x4d\xe4\x02\x04\x00\x00\xff\xff\xd8\xa3\x85\xae\x30\x00\x00\x00")

func _6_create_pgstream_refresh_schema_functionDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__6_create_pgstream_refresh_schema_functionDownSql,
		"6_create_pgstream_refresh_schema_function.down.sql",
	)
}

func _6_create_pgstream_refresh_schema_functionDownSql() (*asset, error) {
	bytes, err := _6_create_pgstream_refresh_schema_functionDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "6_create_pgstream_refresh_schema_function.down.sql", size: 48, mode: os.FileMode(420), modTime: time.Unix(1720000959, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __6_create_pgstream_refresh_schema_functionUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x92\x4f\x8f\xd3\x30\x10\xc5\xef\xf9\x14\x4f\x55\x0f\x0d\x54\x2b\x71\x25\xea\x21\xa4\x93\xae\xa5\xd4\x41\xb6\x83\xb4\x27\xcb\xdb\x35\x49\x44\xfe\x11\x5b\x0b\x7c\x7b\xd4\xac\xcb\xc2\x96\x9e\xa2\x99\x79\x33\xf3\x7b\x13\x67\x82\x52\x45\x28\x05\x04\x7d\x2e\xd2\x8c\x90\x57\x3c\x53\xac\xe4\x98\x6a\xe7\x67\x6b\xfa\xbb\xd9\x7e\x9d\xad\x6b\xb4\x3b\x35\xb6\x37\x9b\x97\x8f\xf6\xa3\x0e\x05\x78\xfb\xd3\xc7\x10\xa4\x2a\xc1\x25\x9e\xc7\xf6\x29\x02\x80\x22\xe5\x87\x2a\x3d\x10\xa6\x6e\xaa\xdd\xf7\x6e\x49\x4a\xca\x2a\xc1\xd4\x03\xf6\x94\x33\x4e\x22\x24\x15\x9c\x35\xf3\xa9\xd1\x93\xf1\x0d\x76\x98\x6a\x7d\x32\xde\x74\x63\xbd\x9d\x6a\xed\x6d\x3f\x2d\xc2\x54\x62\xbd\x8e\xf6\x94\x15\xa9\xa0\x25\x13\x68\x9e\xed\xec\xda\x71\xc0\x63\x5b\xb7\x83\x4f\x96\x52\xeb\xb4\xfb\xe5\xbc\xed\x03\x39\x1e\xc7\xb1\xb3\x66\x48\xa2\x4f\x74\x60\x3c\xfa\x8f\xe2\xe3\xee\xd5\xf6\xdb\xe2\xb5\xf1\x38\x89\x22\x80\xe5\xb8\x3e\x09\x93\xe0\xa5\x02\xaf\x8a\x02\x66\x78\x5a\x02\x26\xb5\x7c\x90\x8a\x8e\x5a\x66\xf7\x74\x4c\xa1\xee\x89\x07\xff\x05\x65\x0a\x59\x59\x71\xb5\x79\x17\xbf\xff\x00\xc6\x55\xf9\xc6\xdb\xa2\x04\x72\x51\x1e\xb1\xba\x50\xae\xee\x56\x41\xd5\x8d\xf5\x2a\x48\x7e\x34\x76\xb6\x97\xee\xc1\xf4\x16\xbb\x6b\xc4\x85\x1d\x60\x5c\x92\x50\x2f\xfb\x6e\x4c\xc5\x26\x10\x6c\xff\x9e\x79\x09\xe2\xb0\xf4\x4b\x5a\x54\x24\xb1\xf9\x17\x7a\x7b\xbd\x78\xfb\x7a\xe2\xda\xfa\xdb\xc7\x8d\x03\xa1\xa0\xf3\xf3\xf8\xd3\xe3\xbe\xb5\xd3\x19\xeb\xfc\x8f\x89\xef\xc1\xf2\x24\x22\xbe\x4f\xa2\xf5\x3a\x89\x7e\x07\x00\x00\xff\xff\x22\x78\x5d\x70\xcf\x02\x00\x00")

func _6_create_pgstream_refresh_schema_functionUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__6_create_pgstream_refresh_schema_functionUpSql,
		"6_create_pgstream_refresh_schema_function.up.sql",
	)
}

func _6_create_pgstream_refresh_schema_functionUpSql() (*asset, error) {
	bytes, err := _6_create_pgstream_refresh_schema_functionUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "6_create_pgstream_refresh_schema_function.up.sql", size: 719, mode: os.FileMode(420), modTime: time.Unix(1720000959, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __7_create_pgstream_event_triggersDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x70\x0d\x73\xf5\x0b\x51\x08\x09\xf2\x74\x77\x77\x0d\x52\xf0\x74\x53\x70\x8d\xf0\x0c\x0e\x09\x56\x28\x48\x2f\x2e\x29\x4a\x4d\xcc\x8d\xcf\xc9\x4f\x8f\x2f\x4e\xce\x48\xcd\x4d\x8c\x4f\x2e\x4a\x4d\x2c\x49\x8d\x4f\xcc\x29\x49\x2d\x8a\x2f\x49\x4c\xca\x49\xb5\xe6\x22\xd9\x90\x94\xa2\xfc\x02\x18\x1b\x6a\x06\x20\x00\x00\xff\xff\xa4\x32\xde\xb7\x89\x00\x00\x00")

func _7_create_pgstream_event_triggersDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__7_create_pgstream_event_triggersDownSql,
		"7_create_pgstream_event_triggers.down.sql",
	)
}

func _7_create_pgstream_event_triggersDownSql() (*asset, error) {
	bytes, err := _7_create_pgstream_event_triggersDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "7_create_pgstream_event_triggers.down.sql", size: 137, mode: os.FileMode(420), modTime: time.Unix(1720000959, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __7_create_pgstream_event_triggersUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8e\xc1\x0e\x82\x30\x10\x44\xef\x7e\xc5\xde\x80\xc4\xf8\x03\x9e\xb0\xae\x40\xa2\xc5\xd4\xa2\xde\x9a\x95\x6e\xf0\xd0\x02\x96\xfe\x7f\x4c\x34\xe2\x95\xdb\x4c\x26\x79\x6f\x84\xc2\x5c\x23\xe0\x15\xa5\x06\xad\xaa\xa2\x40\x05\x63\x37\xc5\xc0\xe4\x8d\x1b\x3a\x33\xb5\x4f\xf6\x64\xda\xc0\x14\xd9\x90\x8b\x1c\x4c\xa4\x87\x63\xa8\x25\x58\xeb\x4c\x3b\x78\x4f\xbd\x35\xdc\x5b\xc0\x3b\x8a\x46\x23\x1c\x1a\x29\x74\x55\xcb\x19\xb5\xf9\xa3\xd2\x6c\xbb\x5a\xac\xb5\x61\x18\x7f\x79\xb6\x4e\x2f\xf7\x19\xe0\x56\xa2\x84\x48\x1d\x54\x12\xd2\x64\xaf\xea\x33\xe8\x7c\x77\xc4\x64\x0d\xdf\x76\x11\x25\x9e\xf2\x24\x5b\x7c\xec\x1d\x00\x00\xff\xff\xc9\xeb\xd8\xd5\x10\x01\x00\x00")

func _7_create_pgstream_event_triggersUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__7_create_pgstream_event_triggersUpSql,
		"7_create_pgstream_event_triggers.up.sql",
	)
}

func _7_create_pgstream_event_triggersUpSql() (*asset, error) {
	bytes, err := _7_create_pgstream_event_triggersUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "7_create_pgstream_event_triggers.up.sql", size: 272, mode: os.FileMode(420), modTime: time.Unix(1720000959, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"1_create_pgstream_xid.down.sql":                     _1_create_pgstream_xidDownSql,
	"1_create_pgstream_xid.up.sql":                       _1_create_pgstream_xidUpSql,
	"2_create_pgstream_schemalog_table.down.sql":         _2_create_pgstream_schemalog_tableDownSql,
	"2_create_pgstream_schemalog_table.up.sql":           _2_create_pgstream_schemalog_tableUpSql,
	"3_create_pgstream_tableids_table.down.sql":          _3_create_pgstream_tableids_tableDownSql,
	"3_create_pgstream_tableids_table.up.sql":            _3_create_pgstream_tableids_tableUpSql,
	"4_create_pgstream_get_schema_function.down.sql":     _4_create_pgstream_get_schema_functionDownSql,
	"4_create_pgstream_get_schema_function.up.sql":       _4_create_pgstream_get_schema_functionUpSql,
	"5_create_pgstream_log_schema_function.down.sql":     _5_create_pgstream_log_schema_functionDownSql,
	"5_create_pgstream_log_schema_function.up.sql":       _5_create_pgstream_log_schema_functionUpSql,
	"6_create_pgstream_refresh_schema_function.down.sql": _6_create_pgstream_refresh_schema_functionDownSql,
	"6_create_pgstream_refresh_schema_function.up.sql":   _6_create_pgstream_refresh_schema_functionUpSql,
	"7_create_pgstream_event_triggers.down.sql":          _7_create_pgstream_event_triggersDownSql,
	"7_create_pgstream_event_triggers.up.sql":            _7_create_pgstream_event_triggersUpSql,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"1_create_pgstream_xid.down.sql":                     &bintree{_1_create_pgstream_xidDownSql, map[string]*bintree{}},
	"1_create_pgstream_xid.up.sql":                       &bintree{_1_create_pgstream_xidUpSql, map[string]*bintree{}},
	"2_create_pgstream_schemalog_table.down.sql":         &bintree{_2_create_pgstream_schemalog_tableDownSql, map[string]*bintree{}},
	"2_create_pgstream_schemalog_table.up.sql":           &bintree{_2_create_pgstream_schemalog_tableUpSql, map[string]*bintree{}},
	"3_create_pgstream_tableids_table.down.sql":          &bintree{_3_create_pgstream_tableids_tableDownSql, map[string]*bintree{}},
	"3_create_pgstream_tableids_table.up.sql":            &bintree{_3_create_pgstream_tableids_tableUpSql, map[string]*bintree{}},
	"4_create_pgstream_get_schema_function.down.sql":     &bintree{_4_create_pgstream_get_schema_functionDownSql, map[string]*bintree{}},
	"4_create_pgstream_get_schema_function.up.sql":       &bintree{_4_create_pgstream_get_schema_functionUpSql, map[string]*bintree{}},
	"5_create_pgstream_log_schema_function.down.sql":     &bintree{_5_create_pgstream_log_schema_functionDownSql, map[string]*bintree{}},
	"5_create_pgstream_log_schema_function.up.sql":       &bintree{_5_create_pgstream_log_schema_functionUpSql, map[string]*bintree{}},
	"6_create_pgstream_refresh_schema_function.down.sql": &bintree{_6_create_pgstream_refresh_schema_functionDownSql, map[string]*bintree{}},
	"6_create_pgstream_refresh_schema_function.up.sql":   &bintree{_6_create_pgstream_refresh_schema_functionUpSql, map[string]*bintree{}},
	"7_create_pgstream_event_triggers.down.sql":          &bintree{_7_create_pgstream_event_triggersDownSql, map[string]*bintree{}},
	"7_create_pgstream_event_triggers.up.sql":            &bintree{_7_create_pgstream_event_triggersUpSql, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
